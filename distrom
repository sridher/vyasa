#!/usr/bin/env bash

set -e -u -o pipefail

# development environment
#nix develop

RUNAS="doas" # or sudo

#https://www.shellhacks.com/bash-colors/
#❯ neofetch
# fg = 30..37
# bg = 40..47
# lfg = 1;{30..37}
# lbg = 1;{40..47}

# MODIFICATIONS: 0 -> Normal, 1 -> Bold, 4 -> Underline, 5 -> Blinking, 7 -> Reverse video char
# -e    	Enable interpretation of backslash escapes
# \e[   	Begin the color modifications
# COLORm	Color Code + ‘m’ at the end
# \e[0m 	End code in the color modifications
#
# echo -e "\e[COLORmSample Text\e[0m"
# echo -e "\e[COLOR1;COLOR2mSample Text\e[0m"

echo -e "\e[1;34mBuilding Vyasa linux....\e[0m"

# Warmup admin
$RUNAS echo -e "\e[1;36m$(uname -a)\e[0m"

$RUNAS modprobe nbd max_parts=8

# FIX: `NIXOS` : ../tools/all_syscalls: cannot execute: required file not found
# Applications expecting absolute path
if [ ! -f /bin/bash ]; then
    echo -e "\e[1;31mBash not found!\n"
    echo -e "\e[1;30m---------------"
    echo -e "\e[1;34mSymlinking bash"
    echo -e "\e[1;30m---------------"
    $RUNAS ln -s /run/current-system/sw/bin/bash /bin/bash 
    $RUNAS ln -s /etc/profiles/per-user/js/bin/python3 /usr/bin
fi


# Cleanup
SECONDS=0
TOTALTIME=0

$RUNAS rm vyasa.qcow2 builds rootfs disk -rfd
#$RUNAS rm vyasa.qcow2 builds rootfs disk toolchains -rfd

WS=$(pwd)
mkdir $WS/builds
VYASA=$(pwd)/rootfs
VYASA_TGT=$(uname -m)-vyasa-linux-gnu
#VYASA_TGT=$(uname -m)-vyasa-linux-musl
#HOST=x86_64-linux-gnu #overwriting to host
#HOST=x86_64-linux-musl #overwriting to host


#mkdir toolchains 
#cd toolchains
#wget https://landley.net/bin/toolchains/25-03-2024/x86_64-linux-musl-cross.tar.xz
##wget https://toolchains.bootlin.com/downloads/releases/toolchains/x86-64/tarballs/x86-64--glibc--bleeding-edge-2024.05-1.tar.xz
#tar -xf x86_64-linux-musl-cross.tar.xz
##tar -xf x86-64--glibc--bleeding-edge-2024.05-1.tar.xz
#cd $WS

#TOOLCHAIN=$WS/toolchains/x86_64-linux-musl-cross/bin/x86_64-linux-musl
TOOLCHAIN=$WS/toolchains/x86-64--glibc--bleeding-edge-2024.05-1/bin/x86_64-buildroot-linux-gnu
TOOL="$TOOLCHAIN"-
CC="$TOOL"gcc
CXX="$TOOL"g++
MAKE=$(which make)

## Sysroot
SYSROOT=$($CC --print-sysroot)
#export SYSROOT=$($CC --print-sysroot)
#cp -R "$SYSROOT"/bin $VYASA/
#cp -R "$SYSROOT"/include $VYASA/
#cp -R "$SYSROOT"/lib $VYASA/


## FIX: `Workaround` mkpasswd.c:(.text.mkpasswd_main+0x1cc): undefined reference to `crypt'
#docker build -t toybox:0.8.12 .
#docker rm -f dummy
#docker create --name dummy toybox:0.8.12
#docker cp -a dummy:/ $VYASA
#docker rm -f dummy

# Rootfs dirs
mkdir -p "$VYASA"/{dev,etc/rc,proc,root,sys,usr/{bin,sbin,lib}}
ln -s usr/{bin,sbin,lib} "$VYASA"
#chmod a+rwxt "$VYASA"/tmp 

mkdir -pv "$VYASA"/{boot,home,mnt,opt,srv}

mkdir -pv "$VYASA"/etc/{opt,sysconfig}
mkdir -pv "$VYASA"/lib/firmware
mkdir -pv "$VYASA"/media/{floppy,cdrom}
mkdir -pv "$VYASA"/usr/{,local/}{include,src}
mkdir -pv "$VYASA"/usr/lib/locale
mkdir -pv "$VYASA"/usr/local/{bin,lib,sbin}
mkdir -pv "$VYASA"/usr/{,local/}share/{color,dict,doc,info,locale,man}
mkdir -pv "$VYASA"/usr/{,local/}share/{misc,terminfo,zoneinfo}
mkdir -pv "$VYASA"/usr/{,local/}share/man/man{1..8}
mkdir -pv "$VYASA"/var/{cache,local,log,mail,opt,spool}
mkdir -pv "$VYASA"/var/lib/{color,misc,locate}

ln -sfv /run "$VYASA"/var/run
ln -sfv /run/lock "$VYASA"/var/lock

install -dv -m 0750 "$VYASA"/root
install -dv -m 1777 "$VYASA"/tmp "$VYASA"/var/tmp


# DEBUG:
cp /tmp/nxjs/{ash,bash,dash,fish,libtree,mount,neovim,nu,ping,rldd} $VYASA/bin/

## Devices
#$RUNAS mknod -m 622 $VYASA/dev/console c 5 1
#$RUNAS mknod -m 666 $VYASA/dev/null c 1 3
#$RUNAS mknod -m 666 $VYASA/dev/zero c 1 5
#$RUNAS mknod -m 666 $VYASA/dev/ptmx c 5 2
#$RUNAS mknod -m 666 $VYASA/dev/tty c 5 0 # <--
#$RUNAS mknod -m 444 $VYASA/dev/random c 1 8
#$RUNAS mknod -m 444 $VYASA/dev/urandom c 1 9
#$RUNAS chown root:tty $VYASA/dev/{console,ptmx,tty}

# init
tee -a "$VYASA"/sbin/init > /dev/null << 'EOF' &&
#!/bin/bash
echo -e "\e[1;36m### INIT SCRIPT ###\e[0m"

export HOME=/home PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

mount -t devtmpfs dev /dev
mountpoint -q dev/pts || { mkdir -p dev/pts && mount -t devpts dev/pts dev/pts;}

mkdir -p dev/shm
chmod +t /dev/shm

exec 0</dev/console
exec 1>/dev/console
exec 2>/dev/console

#chown root:tty /dev/{console,ptmx,tty}
#chmod ug+rw /dev/{console,ptmx,tty}
#for tty in /dev/tty*; do
#    chown root:tty "$tty"
#    chmod ug+rw "$tty"   #do not touch other bits
#done

mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -t tmpfs none /run
mount -t tmpfs none /tmp

ip link set up eth0
ip addr add 10.0.2.11/24 dev eth0
ip route add 10.0.2.2 dev eth0
ip route add 0/0 via 10.0.2.2 dev eth0

dnsmasq -uroot

echo -e "\e[1;36m\nBoot took $(cut -d' ' -f1 /proc/uptime) seconds\e[0m\n\e[1;34m"
cat <<!


@@@  @@@  @@@ @@@   @@@@@@    @@@@@@    @@@@@@  
@@@  @@@  @@@ @@@  @@@@@@@@  @@@@@@@   @@@@@@@@ 
@@!  @@@  @@! !@@  @@!  @@@  !@@       @@!  @@@ 
!@!  @!@  !@! @!!  !@!  @!@  !@!       !@!  @!@ 
@!@  !@!   !@!@!   @!@!@!@!  !!@@!!    @!@!@!@! 
!@!  !!!    @!!!   !!!@!!!!   !!@!!!   !!!@!!!! 
:!:  !!:    !!:    !!:  !!!       !:!  !!:  !!! 
 ::!!:!     :!:    :!:  !:!      !:!   :!:  !:! 
  ::::       ::    ::   :::  :::: ::   ::   ::: 
   :         :      :   : :  :: : :     :   : : 


!

echo -e "\e[0m\e[1;33m\nWelcome to Vysa linux\e[0m\n"

exec /bin/bash
EOF
chmod +x "$VYASA"/sbin/init

# Distro
tee -a "$VYASA"/etc/passwd > /dev/null << 'EOF' &&
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/usr/bin/false
daemon:x:6:6:Daemon User:/dev/null:/usr/bin/false
guest:x:500:500:guest:/home/guest:/bin/bash
nobody:x:65534:65534:nobody:/proc/self:/dev/null
EOF

tee -a "$VYASA"/etc/group > /dev/null << 'EOF' &&
root:x:0:
guest:x:500:
nobody:x:65534:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
cdrom:x:15:
adm:x:16:
input:x:24:
mail:x:34:
kvm:x:61:
wheel:x:97:
users:x:999:
EOF

tee -a "$VYASA"/etc/resolv.conf > /dev/null << 'EOF' &&
nameserver 1.1.1.1
nameserver 8.8.8.8
EOF

#mkdir "$VYASA"/etc/ssl/certs -p
#wget https://curl.haxx.se/ca/cacert.pem
#cp cacert.pem "$VYASA"/etc/ssl/certs/ca-certificates.crt
#rm cacert.pem 

tee -a "$VYASA"/etc/os-release > /dev/null << 'EOF' &&
NAME="Vyasa linux"
VERSION="pre.alpha"
EOF

tee -a "$VYASA"/etc/environment > /dev/null << 'EOF' &&
#Only programs compiled with PAM (Pluggable Authentication Module) support are able to use it (primarily login systems, which subsequently start the shell or user environment).     
#PATH=/usr/bin:/usr/sbin
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
EOF

tee -a "$VYASA"/etc/profile > /dev/null << 'EOF' &&
# Executed whenever a shell is entered (e.g. when logging in from the console or over ssh)
if [ -d /etc/profile.d ]; then
  for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
      . $i
    fi
  done
  unset i
fi
export HOME=/home PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
EOF

duration=$SECONDS
echo -e "\e[1;33mPre init took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

###################################################
# Stage 1 from cross compiler

# binutils-2.44
# ------------------------------
cd $WS/builds
tar -xf ../sources/binutils-2.44.tar.xz

mkdir binutils-2.44/sbuild -p
cd binutils-2.44/sbuild
../configure                    \
    --prefix=$VYASA/tools       \
    --with-sysroot=$VYASA       \
    --target=$VYASA_TGT         \
    --disable-nls               \
    --enable-gprofng=no         \
    --disable-werror            \
    --enable-new-dtags          \
    --enable-default-hash-style=gnu

make -j16
make install
cd $WS

duration=$SECONDS
echo -e "\e[1;32mStage 1: \e[1;33mbinutils compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# gcc
# ------------------------------
# ❯ ll vbuilds/gcc-14.2.0/{gettext-0.22.tar.gz,gmp-6.2.1.tar.bz2,isl-0.24.tar.bz2,mpc-1.2.1.tar.gz,mpfr-4.1.0.tar.bz2}
cd $WS/builds
tar -xf ../sources/gcc-14.2.0.tar.xz

cd gcc-14.2.0

tar -xf ../../sources/mpfr-4.1.0.tar.bz2
mv -v mpfr-4.1.0 mpfr
tar -xf ../../sources/gmp-6.2.1.tar.bz2
mv -v gmp-6.2.1 gmp
tar -xf ../../sources/mpc-1.2.1.tar.gz
mv -v mpc-1.2.1 mpc

sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64

cd $WS/builds

mkdir gcc-14.2.0/sbuild -p

cd gcc-14.2.0/sbuild
../configure                    \
    --prefix=$VYASA/tools       \
    --with-sysroot=$VYASA       \
    --target=$VYASA_TGT         \
    --with-glibc-version=2.41   \
    --with-newlib             \
    --without-headers         \
    --enable-default-pie      \
    --enable-default-ssp      \
    --disable-nls             \
    --disable-shared          \
    --disable-multilib        \
    --disable-threads         \
    --disable-libatomic       \
    --disable-libgomp         \
    --disable-libquadmath     \
    --disable-libssp          \
    --disable-libvtv          \
    --disable-libstdcxx       \
    --enable-languages=c,c++


make -j16
make install
cd $WS

duration=$SECONDS
echo -e "\e[1;32mStage 1: \e[1;33mgcc compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Kernel
# ------------------------------
cd $WS/builds
tar -xf ../sources/linux-6.13.5.tar.zst

cd linux
make mrproper

make headers
find usr/include -type f ! -name '*.h' -delete
cp -rv usr/include $VYASA/usr

cd $WS

duration=$SECONDS
echo -e "\e[1;32mStage 1: \e[1;33mkernel headers took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Glibc
# ------------------------------

# for standard only
#ln -sfv ../lib/ld-linux-x86-64.so.2 $VYASA/lib64
#ln -sfv ../lib/ld-linux-x86-64.so.2 $VYASA/lib64/ld-lsb-x86-64.so.3

cd $WS/builds
tar -xf ../sources/glibc-2.41.tar.xz
mkdir glibc-2.41/sbuild -p
echo "rootsbindir=/usr/sbin" > configparms
cd glibc-2.41/sbuild

../configure                    \
    --prefix=/usr               \
    --host=$VYASA_TGT           \
    --build=$(../scripts/config.guess) \
    --enable-kernel=5.4                \
    --with-headers=$VYASA/usr/include    \
    --disable-nscd                     \
    libc_cv_slibdir=/usr/lib

make -j16
make DESTDIR=$VYASA install
sed '/RTLDLIST=/s@/usr@@g' -i $VYASA/usr/bin/ldd
cd $WS

duration=$SECONDS
echo -e "\e[1;32mStage Target: \e[1;33mglibc compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0


# Check
#echo 'int main(){}' | $VYASA_TGT-gcc -xc -
echo 'int main(){}' | $VYASA/tools/bin/$VYASA_TGT-gcc -xc -
#echo 'int main(){}' | $VYASA/tools/bin/$VYASA_TGT-gcc -xc --with-lib-path=$VYASA/tools/lib -
#echo 'int main(){}' | $VYASA/tools/bin/$VYASA_TGT-gcc -xc --sysroot=$VYASA/tools/lib/gcc/$VYASA_TGT/14.2.0 -
echo -e "\e[1;36m\n\n\n\n\n$(readelf -l a.out | grep ld-linux)\n\n\n\n\n\e[0m"

rm -v a.out

# target libstdc++
# ------------------------------
cd $WS/builds
mkdir gcc-14.2.0/libstdc++-v3/sbuild -p
cd gcc-14.2.0/libstdc++-v3/sbuild

../configure                        \
    --host=$VYASA_TGT               \
    --build=$(../../config.guess)   \
    --prefix=/usr                   \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-pch         \
    --enable-libstdcxx-threads=no   \
    --with-libstdcxx-zoneinfo=no    \
    --with-gxx-include-dir=/tools/$VYASA_TGT/include/c++/14.2.0

make -j16
make DESTDIR=$VYASA install
rm -vf $VYASA/usr/lib/lib{stdc++{,exp,fs},supc++}.la
cd $WS

duration=$SECONDS
echo -e "\e[1;32mStage Target: \e[1;33mlibstdc++ compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

###################################################

PATH=$PATH:$VYASA/usr/bin:$VYASA/tools/bin

# M4
# ------------------------------
cd $WS/builds
tar -xf ../sources/m4-1.4.19.tar.xz
mkdir m4-1.4.19/build -p
cd m4-1.4.19/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mm4 compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Ncurses
# ------------------------------
# BUG: fix tic
cd $WS/builds
tar -xf ../sources/ncurses-6.5.tar.gz

mkdir ncurses-6.5/tuild -p
cd ncurses-6.5/tuild

../configure AWK=gawk
make -C include
make -C progs tic
cd $WS/builds

mkdir ncurses-6.5/build -p
cd ncurses-6.5/build

../configure --prefix=/usr               \
            --host=$VYASA_TGT            \
            --build=$(../config.guess)   \
            --mandir=/usr/share/man      \
            --with-manpage-format=normal \
            --with-shared                \
            --without-normal             \
            --with-cxx-shared            \
            --without-debug              \
            --without-ada                \
            --disable-stripping          \
            AWK=gawk

make -j16

make DESTDIR=$VYASA TIC_PATH=$(pwd)/../tuild/progs/tic install
ln -sv libncursesw.so $VYASA/usr/lib/libncurses.so
cd $WS

duration=$SECONDS
echo -e "\e[1;33mncurces compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Bash
# ------------------------------
cd $WS/builds
tar -xf ../sources/bash-5.2.37.tar.gz
mkdir bash-5.2.37/build -p
cd bash-5.2.37/build

#CFLAGS=-Wno-error -Wno-error=implicit-function-declaration
#[-Wimplicit-function-declaration]
../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../support/config.guess)\
            --without-bash-malloc \
            CFLAGS="-Wno-error=implicit-function-declaration"

make -j16

make DESTDIR=$VYASA install
ln -sv bash $VYASA/bin/sh
cd $WS

duration=$SECONDS
echo -e "\e[1;33mBash compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Coreutils
# ------------------------------
cd $WS/builds
tar -xf ../sources/coreutils-9.6.tar.xz
mkdir coreutils-9.6/build -p
cd coreutils-9.6/build

export FORCE_UNSAFE_CONFIGURE=1 # error: you should not run configure as root
../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)\
            --without-selinux 

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mcoreutils compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Diffutils
# ------------------------------
cd $WS/builds
tar -xf ../sources/diffutils-3.11.tar.xz
mkdir diffutils-3.11/build -p
cd diffutils-3.11/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mdiffutils compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# File
# ------------------------------
cd $WS/builds
tar -xf ../sources/file-5.46.tar.gz

mkdir file-5.46/tuild -p
cd file-5.46/tuild

../configure --disable-bzlib      \
             --disable-libseccomp \
             --disable-xzlib      \
             --disable-zlib
make
cd $WS/builds

mkdir file-5.46/build -p
cd file-5.46/build

../configure --prefix=/usr --host=$VYASA_TGT --build=$(../config.guess)

make FILE_COMPILE=$(pwd)/../tuild/src/file -j16

make DESTDIR=$VYASA install

rm -vf $VYASA/usr/lib/libmagic.la
cd $WS

duration=$SECONDS
echo -e "\e[1;33mfile compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# findutils
# ------------------------------
cd $WS/builds
tar -xf ../sources/findutils-4.10.0.tar.xz
mkdir findutils-4.10.0/build -p
cd findutils-4.10.0/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mfindutils compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# gwak
# ------------------------------
cd $WS/builds
tar -xf ../sources/gawk-5.3.1.tar.xz
mkdir gawk-5.3.1/build -p
cd gawk-5.3.1/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mgawk compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# grep
# ------------------------------
cd $WS/builds
tar -xf ../sources/grep-3.11.tar.xz
mkdir grep-3.11/build -p
cd grep-3.11/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mgrep compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# gzip
# ------------------------------
cd $WS/builds
tar -xf ../sources/gzip-1.13.tar.xz
mkdir gzip-1.13/build -p
cd gzip-1.13/build

../configure --prefix=/usr --host=$VYASA_TGT 

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mgzip compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# make
# ------------------------------
cd $WS/builds
tar -xf ../sources/make-4.4.1.tar.gz
mkdir make-4.4.1/build -p
cd make-4.4.1/build

../configure --prefix=/usr    \
            --host=$VYASA_TGT \
            --without-guile   \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mmake compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# patch
# ------------------------------
cd $WS/builds
tar -xf ../sources/patch-2.7.6.tar.xz
mkdir patch-2.7.6/build -p
cd patch-2.7.6/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mpatch compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# sed
# ------------------------------
cd $WS/builds
tar -xf ../sources/sed-4.9.tar.xz
mkdir sed-4.9/build -p
cd sed-4.9/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mpatch compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# tar
# ------------------------------
cd $WS/builds
tar -xf ../sources/tar-1.35.tar.xz
mkdir tar-1.35/build -p
cd tar-1.35/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)

make -j16

make DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mtar compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# xz
# ------------------------------
cd $WS/builds
tar -xf ../sources/xz-5.6.4.tar.xz
mkdir xz-5.6.4/build -p
cd xz-5.6.4/build

../configure --prefix=/usr   \
            --host=$VYASA_TGT \
            --build=$(../build-aux/config.guess)\
            --disable-static                  \

make -j16

make DESTDIR=$VYASA install
rm -vf $VYASA/usr/lib/liblzma.la
cd $WS

duration=$SECONDS
echo -e "\e[1;33mxz compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# binutils-2.44
# ------------------------------
cd $WS/builds
tar -xf ../sources/binutils-2.44.tar.xz

cd binutils-2.44
sed '6031s/$add_dir//' -i ltmain.sh
cd $WS/builds

mkdir binutils-2.44/build -p
cd binutils-2.44/build

../configure                    \
    --prefix=/usr               \
    --host=$VYASA_TGT           \
    --build=$(../config.guess)  \
    --enable-shared             \
    --enable-gprofng=no         \
    --disable-nls               \
    --disable-werror            \
    --enable-64-bit-bfd         \
    --enable-new-dtags          \
    --enable-default-hash-style=gnu

make -j16
make DESTDIR=$VYASA install
#steam-run make DESTDIR=$VYASA install # nixos  HACK: for /usr/local/lib/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2
#CFLAGS="-U_FORTIFY_SOURCE -O2 -fno-stack-protector" make -j16
rm -vf $VYASA/usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes,sframe}.{a,la}
cd $WS

duration=$SECONDS
echo -e "\e[1;33mbinutils compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# gcc
# ------------------------------
cd $WS/builds
tar -xf ../sources/gcc-14.2.0.tar.xz

cd gcc-14.2.0

tar -xf ../../sources/mpfr-4.1.0.tar.bz2
mv -v mpfr-4.1.0 mpfr
tar -xf ../../sources/gmp-6.2.1.tar.bz2
mv -v gmp-6.2.1 gmp
tar -xf ../../sources/mpc-1.2.1.tar.gz
mv -v mpc-1.2.1 mpc

sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64

sed '/thread_header =/s/@.*@/gthr-posix.h/' -i libgcc/Makefile.in libstdc++-v3/include/Makefile.in

cd $WS/builds

mkdir gcc-14.2.0/build -p

cd gcc-14.2.0/build

export CFLAGS="-Wno-error -Wno-error=implicit-function-declaration -Wno-error=format-security"
export CXXFLAGS="-Wno-error -Wno-error=implicit-function-declaration -Wno-error=format-security"
export CPPFLAGS="-Wno-error -Wno-error=implicit-function-declaration -Wno-error=format-security"
#[-Werror=format-security]

../configure                    \
    --prefix=/usr               \
    --host=$VYASA_TGT           \
    --build=$(../config.guess)  \
    --target=$VYASA_TGT         \
    LDFLAGS_FOR_TARGET=-L$PWD/$VYASA_TGT/libgcc    \
    --with-build-sysroot=$VYASA                    \
    --enable-default-pie                           \
    --enable-default-ssp                           \
    --disable-nls                                  \
    --disable-multilib                             \
    --disable-libatomic                            \
    --disable-libgomp                              \
    --disable-libquadmath                          \
    --disable-libsanitizer                         \
    --disable-libssp                               \
    --disable-libvtv                               \
    --enable-languages=c,c++                       \
    --disable-werror            

make -j16
make DESTDIR=$VYASA install
ln -sv gcc $VYASA/usr/bin/cc
cd $WS

#❯ echo 'int main(){}' | $VYASA/tools/bin/$VYASA_TGT-gcc -xc -
#❯ echo 'int main(){}' | $VYASA/tools/bin/$VYASA_TGT-gcc -xc++ --sysroot=$VYASA -

duration=$SECONDS
echo -e "\e[1;33mgcc compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0


fail
exit 0

# Setup just built toolchain
PATH=$VYASA/tools/bin:$PATH
TOOL="$VYASA_TGT"-
CC="$TOOL"gcc
CXX="$TOOL"g++

env | rg "vyasa|VYASA"


# iproute - deps: elfutils, libcap, libz, libzstd
# ------------------------------
cd $WS/builds
tar -xf ../sources/iproute2-6.13.0.tar.xz
#mkdir iproute2-6.13.0.tar.xz/build -p
cd iproute2-6.13.0
./configure --libbpf_force off --prefix=/usr

make -j16
$RUNAS $MAKE DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33miproute compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# Static
#❯ ldd /tmp/nxjs/fish
#❯ cp result/bin/fish* /tmp/nxjs/
#❯ nix build -L nixpkgs#pkgsStatic.fish
#❯ nix build -L nixpkgs#pkgsStatic.toybox

## Util-linux
## ------------------------------
#cd $WS/builds
#tar -xf ../sources/util-linux-2.40.4.tar.xz
#mkdir util-linux-2.40.4/build -p
#cd util-linux-2.40.4
#./autogen.sh
#cd build
#
#../configure --prefix=/usr   \
#            --host=$VYASA_TGT \
#            --disable-pylibmount  \
#            --disable-static      \
#            --disable-liblastlog2 \
#            --without-python      
#
#
#make -j16
#$RUNAS $MAKE DESTDIR=$VYASA install
#cd $WS
#
#duration=$SECONDS
#echo -e "\e[1;33mutil-linux compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
#TOTALTIME=$((TOTALTIME + duration))
#SECONDS=0


## elfutils
## ------------------------------
#cd $WS/builds
#tar -xf ../sources/elfutils-0.192.tar.bz2
#mkdir elfutils-0.192/build -p
#cd elfutils-0.192/
#autoreconf -i -f
#cd build/
#../configure --host $VYASA_TGT --disable-option-checking --enable-maintainer-mode --prefix=/usr
#
#make -j16
#$RUNAS $MAKE DESTDIR=$VYASA install
#cd $WS
#
#duration=$SECONDS
#echo -e "\e[1;33melfutils compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
#TOTALTIME=$((TOTALTIME + duration))
#SECONDS=0

# openssl
# ------------------------------
cd $WS/builds
tar -xf ../sources/openssl-3.4.1.tar.gz
mkdir openssl-openssl-3.4.1/build -p
cd openssl-openssl-3.4.1/build
../Configure --prefix=/usr --libdir=lib

make -j16
$RUNAS $MAKE DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mopenssl compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# wget
# ------------------------------
cd $WS/builds
tar -xf ../sources/wget-1.25.0.tar.gz
mkdir wget-1.25.0/build -p
cd wget-1.25.0/build
../configure --host $VYASA_TGT --with-ssl=openssl OPENSSL_CFLAGS=-I$VYASA/usr/include OPENSSL_LIBS="-L$VYASA/usr/lib -lssl -lcrypto"

make -j16
$RUNAS $MAKE DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mwget compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# libcap
# ------------------------------
cd $WS/builds
tar -xf ../sources/libcap-2.75.tar.gz
cd libcap-2.75
make -j16
$RUNAS $MAKE DESTDIR=$VYASA/lib install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mlibcap compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# zlib
# ------------------------------
cd $WS/builds
tar -xf ../sources/zlib-1.3.1.tar.xz
mkdir zlib-1.3.1/build -p
cd zlib-1.3.1/build
../configure --prefix=/usr

make -j16
$RUNAS $MAKE DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mzlib compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

# zstd
# ------------------------------
cd $WS/builds
tar -xf ../sources/zstd-1.5.7.tar.gz
cd zstd-1.5.7/
make -j16
$RUNAS $MAKE DESTDIR=$VYASA PREFIX=/usr install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mzstd compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0


# dnsmasq2
# ------------------------------
cd $WS/builds
tar -xf ../sources/dnsmasq-2.90.tar.xz
cd dnsmasq-2.90
make -j16
cp src/dnsmasq $VYASA/bin
$RUNAS $MAKE DESTDIR=$VYASA install
cd $WS

duration=$SECONDS
echo -e "\e[1;33mdnsmasq2 compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

#pkgs.gettext
#make[2]: Entering directory '/home/js/Works/JS/vyasa/builds/glibc-2.41/po'
#msgfmt -o /home/js/Works/JS/vyasa/builds/glibc-2.41/build/po/be.mo be.po
#make[2]: msgfmt: No such file or directory

# Glibc
# ------------------------------
cd $WS/builds
tar -xf ../sources/glibc-2.41.tar.xz
mkdir glibc-2.41/build -p
cd glibc-2.41/build
../configure                    \
    --prefix=/usr               \
    --host=$VYASA_TGT           \
    --build=$(../config.guess)  \
    --libdir=/lib               \
    --disable-werror            \
    libc_cv_c_cleanup=yes       \
    libc_cv_forced_unwind=yes


make -j16
$RUNAS $MAKE DESTDIR=$VYASA install
#CFLAGS="-U_FORTIFY_SOURCE -O2 -fno-stack-protector" make -j16
cd $WS

duration=$SECONDS
echo -e "\e[1;33mglibc compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

## musl-libc
#tar -xf musl-1.2.5.tar.gz
#mkdir musl-1.2.5/build -p
#cd musl-1.2.5/build
#../configure --host $VYASA_TGT --disable-werror --libdir=/lib --prefix=/usr
#
#make -j16
#$RUNAS $MAKE DESTDIR=$VYASA install
##CFLAGS="-U_FORTIFY_SOURCE -O2 -fno-stack-protector" make -j16
#cd $WS
#
#duration=$SECONDS
#echo -e "\e[1;33mmusllibc compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
#TOTALTIME=$((TOTALTIME + duration))
#SECONDS=0



# Kernel
# ------------------------------
cd $WS/builds
tar -xf ../sources/linux-6.13.5.tar.zst

cd linux
make distclean
make CROSS_COMPILE=$TOOL tinyconfig

# Kernel config

#64BIT
#BLOCK
#BINFMT_ELF
#BINFMT_SCRIPT
#PRINTK
#DEVTMPFS
#DEVTMPFS_MOUNT
#PCI
#TTY
#SERIAL_8250
#SERIAL_8250_CONSOLE
#BLK_DEV_SD
#ATA
#ATA_PIIX
#EXT4_FS
#PROC_FS
#SYSFS

./scripts/config --set-val CONFIG_64BIT y
./scripts/config --set-val CONFIG_BLOCK y
./scripts/config --set-val CONFIG_BINFMT_ELF y
./scripts/config --set-val CONFIG_BINFMT_SCRIPT y
./scripts/config --set-val CONFIG_PRINTK y
./scripts/config --set-val CONFIG_DEVTMPFS y
./scripts/config --set-val CONFIG_DEVTMPFS_MOUNT y
./scripts/config --set-val CONFIG_PCI y
./scripts/config --set-val CONFIG_TTY y
./scripts/config --set-val CONFIG_SERIAL_8250 y
./scripts/config --set-val CONFIG_SERIAL_8250_CONSOLE y
./scripts/config --set-val CONFIG_BLK_DEV_SD y
./scripts/config --set-val CONFIG_ATA y
./scripts/config --set-val CONFIG_ATA_PIIX y
./scripts/config --set-val CONFIG_EXT4_FS y
./scripts/config --set-val CONFIG_PROC_FS y
./scripts/config --set-val CONFIG_SYSFS y

# Other options
#./scripts/config --set-val CONFIG_TTY_PRINTK y
./scripts/config --set-val CONFIG_EARLY_PRINTK y
#./scripts/config --set-val CONFIG_VIRTIO_CONSOLE y
#./scripts/config --set-val CONFIG_VT_HW_CONSOLE_BINDING y

# Network
#EXPERT
#FUTEX
#COMPAT_32BIT_TIME
#NET
#PACKET
#UNIX
#INET
#NETDEVICES
#ETHERNET
#E1000
#INOTIFY_USER

./scripts/config --set-val CONFIG_EXPERT y
./scripts/config --set-val CONFIG_FUTEX y
./scripts/config --set-val CONFIG_COMPAT_32BIT_TIME y
./scripts/config --set-val CONFIG_NET y
./scripts/config --set-val CONFIG_PACKET y
./scripts/config --set-val CONFIG_UNIX y
./scripts/config --set-val CONFIG_INET y
./scripts/config --set-val CONFIG_NETDEVICES y
./scripts/config --set-val CONFIG_ETHERNET y
./scripts/config --set-val CONFIG_E1000 y
./scripts/config --set-val CONFIG_INOTIFY_USER y

#make defconfig
#make oldconfig
make olddefconfig

mv .config vyasa-miniconfig 
make CROSS_COMPILE=$TOOL allnoconfig KCONFIG_ALLCONFIG=vyasa-miniconfig
cp .config vyasa-config 

make CROSS_COMPILE=$TOOL -j16
cp arch/x86/boot/bzImage $VYASA/boot/vyasa
cd $WS

duration=$SECONDS
echo -e "\e[1;33mKernel compile took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0


# LD
#echo -e "\e[1;32m$($VYASA/lib/libc.so $VYASA/usr/bin/uname -a)\e[0m"
#ldconfig /usr/local/lib64/
#openssl version -a
#echo "/lib:/usr/local/lib:/usr/lib" > /etc/ld-musl-x86_64.path
#$VYASA/bin/ld --help # check
$VYASA/bin/ld.so --help # check
$RUNAS tee -a $VYASA/etc/nsswitch.conf > /dev/null <<EOF
# Begin /etc/nsswitch.conf
passwd: files
group: files
shadow: files
hosts: files dns
networks: files
protocols: files
services: files
ethers: files
rpc: files
# End /etc/nsswitch.conf
EOF

$RUNAS tee -a $VYASA/etc/ld.so.config > /dev/null <<EOF
/lib
/lib64
/usr/lib
/usr/lib64
/usr/local/lib
/usr/local/lib64
/opt/lib
EOF

#❯ ldconfig # target machine
# ldconfig -p # target machine
# ldconfig -n /usr/lib64/libssl.so.3
#❯ ldconfig -v -r -f etc/ld.so.config -C etc/ld.so.cache ./
#❯ ldconfig -v -r -f /etc/ld.so.config -C /etc/ld.so.cache ./
#/tmp # ldd /usr/bin/openssl

# fdisk
cd $WS
qemu-img create -f qcow2 vyasa.qcow2 7G

#lsmod | grep nbd
#modprobe nbd max_parts=8
lsmod | grep nbd

#echo -e "\e[1;33mAdmin authentication.......\e[0m"
$RUNAS qemu-nbd --connect=/dev/nbd0 vyasa.qcow2
sleep 5

$RUNAS fdisk /dev/nbd0 <<EOF
n
p
1


a
w
EOF
$RUNAS fdisk -l /dev/nbd0
lsblk -a | grep nbd0p1
#mknod /dev/nbd0p1 b 43 1
$RUNAS mkfs.ext4 /dev/nbd0p1

mkdir $WS/disk
$RUNAS mount /dev/nbd0p1 $WS/disk

$RUNAS cp -R $VYASA/* $WS/disk

#grub
$RUNAS grub-install --target=i386-pc --root-directory=$WS/disk --no-floppy --modules="normal part_msdos ext2 multiboot" /dev/nbd0
#grub-install --target=i386-pc --root-directory=$WS/disk --no-floppy --modules="normal part_msdos ext2 multiboot" /dev/nbd0 --force

#mkdir $WS/disk/boot/grub -p
$RUNAS tee -a $WS/disk/boot/grub/grub.cfg > /dev/null <<EOF
menuentry 'Vyasa' {
    set root='(hd0,1)'
    linux /boot/vyasa root=/dev/sda1 rw console=tty0 console=ttyS0
}
EOF

sync
sync
sync
$RUNAS umount  $WS/disk
$RUNAS qemu-nbd --disconnect /dev/nbd0
sync
sync
sync


duration=$SECONDS
echo -e "\e[1;33mPost processing took: $((duration / 60)) minutes and $((duration % 60)) seconds elapsed.\e[0m"
TOTALTIME=$((TOTALTIME + duration))
SECONDS=0

exit 0
